/*
Deployment script for SR_DB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SR_DB"
:setvar DefaultFilePrefix "SR_DB"
:setvar DefaultDataPath "C:\Users\Norman\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Norman\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Table [dbo].[Bookings]...';


GO
CREATE TABLE [dbo].[Bookings] (
    [Id]            INT      NOT NULL,
    [clientId]      INT      NOT NULL,
    [planet]        BIT      NOT NULL,
    [stopover]      BIT      NOT NULL,
    [planet_portId] INT      NOT NULL,
    [dateA]         DATETIME NOT NULL,
    [dateB]         DATETIME NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Planets]...';


GO
CREATE TABLE [dbo].[Planets] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [name]        NVARCHAR (50) NOT NULL,
    [capacity]    INT           NOT NULL,
    [distance_m]  INT           NOT NULL,
    [distance_h]  INT           NOT NULL,
    [fuel_req]    INT           NOT NULL,
    [atmosphere]  NVARCHAR (10) NOT NULL,
    [ports_count] SMALLINT      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Ports]...';


GO
CREATE TABLE [dbo].[Ports] (
    [Id]       INT           IDENTITY (1, 1) NOT NULL,
    [name]     NVARCHAR (50) NOT NULL,
    [planetId] INT           NOT NULL,
    [capacity] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [Id]         INT           IDENTITY (1, 1) NOT NULL,
    [fname]      NVARCHAR (50) NOT NULL,
    [lname]      NVARCHAR (50) NOT NULL,
    [bdate]      DATETIME      NOT NULL,
    [email]      NVARCHAR (50) NOT NULL,
    [pass]       NVARCHAR (50) NOT NULL,
    [ccard]      NVARCHAR (50) NULL,
    [idcard]     INT           NULL,
    [book_count] INT           NOT NULL,
    [isAdmin]    BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Users]...';


GO
ALTER TABLE [dbo].[Users]
    ADD DEFAULT 0 FOR [book_count];


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Users]...';


GO
ALTER TABLE [dbo].[Users]
    ADD DEFAULT 0 FOR [isAdmin];


GO
PRINT N'Creating Foreign Key [dbo].[FK_Bookings_ToTable_Clients]...';


GO
ALTER TABLE [dbo].[Bookings] WITH NOCHECK
    ADD CONSTRAINT [FK_Bookings_ToTable_Clients] FOREIGN KEY ([clientId]) REFERENCES [dbo].[Clients] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Bookings_ToTable_Ports]...';


GO
ALTER TABLE [dbo].[Bookings] WITH NOCHECK
    ADD CONSTRAINT [FK_Bookings_ToTable_Ports] FOREIGN KEY ([planet_portId]) REFERENCES [dbo].[Ports] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Ports_ToTable_Planets]...';


GO
ALTER TABLE [dbo].[Ports] WITH NOCHECK
    ADD CONSTRAINT [FK_Ports_ToTable_Planets] FOREIGN KEY ([planetId]) REFERENCES [dbo].[Planets] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Users_ToTable_Clients]...';


GO
ALTER TABLE [dbo].[Users] WITH NOCHECK
    ADD CONSTRAINT [FK_Users_ToTable_Clients] FOREIGN KEY ([Id]) REFERENCES [dbo].[Clients] ([Id]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

--INSERT INTO [Clients] ([fname], [lname], [bdate], [email], [pass], [ccard], [idcard], [book_count], [is_vip]) VALUES ('David', 'Bowman', 30/05/1970, 'db@gmail.com', 'pw', 'XXXX-XXXX-XXXX-XXXX', 'A9F41KV', DEFAULT, 1);
--INSERT INTO [Clients] ([fname], [lname], [bdate], [email], [pass], [ccard], [idcard], [book_count], [is_vip]) VALUES ('John', 'Doe', 02/07/1978, 'jd@gmail.com', 'pw', 'XXXX-XXXX-XXXX-XXXX', 'Y3GN98B', DEFAULT, DEFAULT);
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Bookings] WITH CHECK CHECK CONSTRAINT [FK_Bookings_ToTable_Clients];

ALTER TABLE [dbo].[Bookings] WITH CHECK CHECK CONSTRAINT [FK_Bookings_ToTable_Ports];

ALTER TABLE [dbo].[Ports] WITH CHECK CHECK CONSTRAINT [FK_Ports_ToTable_Planets];

ALTER TABLE [dbo].[Users] WITH CHECK CHECK CONSTRAINT [FK_Users_ToTable_Clients];


GO
PRINT N'Update complete.';


GO
